#  *
#  * These materials contain confidential information and
#  * trade secrets of Dynatrace LLC.  You shall
#  * maintain the materials as confidential and shall not
#  * disclose its contents to any third party except as may
#  * be required by law or regulation.  Use, disclosure,
#  * or reproduction is prohibited without the prior express
#  * written permission of Dynatrace LLC.
#  *
#  * All Compuware products listed within the materials are
#  * trademarks of Dynatrace LLC.  All other company
#  * or product names are trademarks of their respective owners.
#  *
#  * Copyright (c) 2024 Dynatrace LLC.  All rights reserved.
#  *
#  * Catalog of instrumentation known to Dynatrace Snowflake Observability Agent - query history plugin
attributes:
    authentication.type:
        __example: PASSWORD
        __description: The authentication method used for the session.
    client.application.id:
        __example: app123
        __description: The ID of the client application used to execute the query.
    client.application.version:
        __example: 1.0.0
        __description: The version of the client application used to execute the query.
    client.build_id:
        __example: build123
        __description: The build ID of the client application.
    client.environment:
        __example: production
        __description: The environment of the client application.
    client.version:
        __example: 1.0.0
        __description: The version of the client.
    db.query.text:
        __example: SELECT * FROM users;
        __description: The text of the query.
    db.snowflake.tables:
        __example: users
        __description: The tables involved in the query.
    db.snowflake.views:
        __example: user_view
        __description: The views involved in the query.
    event.id:
        __example: login123
        __description: The login event ID associated with the query.
    session.id:
        __example: "1234567890"
        __description: The session ID during which the query was executed.
    dsoa.debug.span.events.added:
        __example: 5
        __description:
            Internal debug field indicating the number of span events successfully
            added to the given span.
    dsoa.debug.span.events.failed:
        __example: 1
        __description:
            Internal debug field indicating the number of span events that
            failed to be added to the given span.
    snowflake.cluster_number:
        __example: cluster1
        __description: The cluster number associated with the query.
    snowflake.database.id:
        __example: db123
        __description: The unique identifier of the database involved in the query.
    snowflake.error.code:
        __example: ERR123
        __description: The error code returned by the query, if any.
    snowflake.error.message:
        __example: Syntax error
        __description: The error message returned by the query, if any.
    snowflake.query.accel_est.estimated_query_times:
        __example: '{ "scaleFactor1": 10, "scaleFactor2": 5 }'
        __description:
            Object that contains the estimated query execution time in seconds
            for different query acceleration scale factors. If the status for the
            query is not eligible for query acceleration, this object is empty.
    snowflake.query.accel_est.status:
        __example: eligible
        __description:
            "Indicates whether the query is eligible to benefit from
            the query acceleration service. Possible values are: eligible, ineligible,
            accelerated, invalid."
    snowflake.query.accel_est.upper_limit_scale_factor:
        __example: 2
        __description:
            Number of the highest query acceleration scale factor in the
            estimatedQueryTimes object. If the status for the query is not eligible
            for query acceleration, this field is set to 0.
    snowflake.query.data_transfer.inbound.cloud:
        __example: AWS
        __description: The cloud provider from which data was transferred inbound.
    snowflake.query.data_transfer.inbound.region:
        __example: us-west-2
        __description: The region from which data was transferred inbound.
    snowflake.query.data_transfer.outbound.cloud:
        __example: AWS
        __description: The cloud provider to which data was transferred outbound.
    snowflake.query.data_transfer.outbound.region:
        __example: us-west-2
        __description: The region to which data was transferred outbound.
    snowflake.query.hash:
        __example: hash123
        __description: The hash of the query text.
    snowflake.query.hash_version:
        __example: v1
        __description: The version of the query hash.
    snowflake.query.id:
        __example: b1bbaa7f-8144-4e50-947a-b7e9bf7d62d5
        __description: The unique identifier for the query.
    snowflake.query.is_client_generated:
        __example: "true"
        __description: Indicates if the statement was generated by the client.
    snowflake.query.operator.attributes:
        __example:
            '{ "equality_join_condition": "(T4.C = T1.C)",   "join_type": "INNER"
            }'
        __description: Information about the operator, depending on the operator type.
    snowflake.query.operator.id:
        __example: 0
        __description:
            The operatorâ€™s identifier, unique within the query. Values start
            at 0.
    snowflake.query.operator.parent_ids:
        __example: "[0]"
        __description:
            Identifiers of the parent operators for this operator, or NULL
            if this is the final operator in the query plan.
    snowflake.query.operator.stats:
        __example: '{ "input_rows": 64, "output_rows": 64 }'
        __description:
            Statistics about the operator (e.g., the number of output rows
            from the operator).
    snowflake.query.operator.time:
        __example:
            '{ "overall_percentage": 50.0,"initialization": 0.5,"processing":
            4.0,"synchronization": 0.5,"local_disk_io": 0.2,"remote_disk_io": 0.1,"network_communication":
            0.2 }'
        __description: |
            The breakdown of the execution time of the operator:
            - **overall_percentage**: The percentage of the total query time spent by this operator,
            - **initialization**: Time spent setting up query processing,
            - **processing**: Time spent processing the data by the CPU,
            - **synchronization**: Time spent synchronizing activities between participating processes,
            - **local_disk_io**: Time during which processing was blocked while waiting for local disk access,
            - **remote_disk_io**: Time during which processing was blocked while waiting for remote disk access,
            - **network_communication**: Time during which processing was waiting for network data transfer.
    snowflake.query.operator.type:
        __example: TableScan
        __description: The type of query operator (e.g., TableScan or Filter).
    snowflake.query.parametrized_hash:
        __example: param_hash123
        __description: The hash of the parameterized query text.
    snowflake.query.parametrized_hash_version:
        __example: v1
        __description: The version of the parameterized query hash.
    snowflake.query.parent_id:
        __example: parent123
        __description: The unique identifier for the parent query, if applicable.
    snowflake.query.retry_cause:
        __example: Network issue
        __description: The cause for retrying the query, if applicable.
    snowflake.query.step.id:
        __example: 1
        __description: Identifier of the step in the query plan.
    snowflake.query.tag:
        __example: tag1
        __description: The tag associated with the query.
    snowflake.query.transaction_id:
        __example: txn123
        __description: The transaction ID associated with the query.
    snowflake.release_version:
        __example: "5.0"
        __description: The release version of Snowflake at the time of query execution.
    snowflake.role.type:
        __example: PRIMARY
        __description: The type of role used to execute the query.
    snowflake.schema.id:
        __example: schema123
        __description: The unique identifier of the schema involved in the query.
    snowflake.schema.name:
        __example: public
        __description: The name of the schema involved in the query.
    snowflake.secondary_role_stats:
        __example: role_stat1
        __description: Statistics related to secondary roles used during the query execution.
    snowflake.session.closed_reason:
        __example: User logout
        __description: The reason the session was closed.
    snowflake.session.start:
        __example: "2024-11-05T21:11:07Z"
        __description: The start time of the session.
    snowflake.warehouse.cluster.number:
        __example: cluster1
        __description: The cluster number of the warehouse used.
    snowflake.warehouse.id:
        __example: wh123
        __description: The unique identifier of the warehouse used.
    snowflake.warehouse.size:
        __example: X-SMALL
        __description: The size of the warehouse used.
    snowflake.warehouse.type:
        __example: STANDARD
        __description: The type of warehouse used.
dimensions:
    db.collection.name:
        __example: users
        __description: The name of the table involved in the query.
    db.namespace:
        __example: PROD_DB
        __description:
            The name of the database that was specified in the context of
            the query at compilation.
    db.operation.name:
        __example: SELECT
        __description: The type of operation performed by the query.
    db.snowflake.dbs:
        __example: PROD_DB
        __description: The databases involved in the query.
    db.user:
        __example: admin
        __description: Snowflake user who issued the query.
    snowflake.query.execution_status:
        __example: SUCCESS
        __description: The execution status of the query.
    snowflake.role.name:
        __example: SYSADMIN
        __description: The role used to execute the query.
    snowflake.warehouse.name:
        __example: COMPUTE_WH
        __description: The warehouse used to execute the query.
metrics:
    snowflake.acceleration.data.scanned:
        __example: "2097152"
        __description: Number of bytes scanned by the query acceleration service.
        displayName: Query Acceleration Bytes Scanned
        unit: bytes
    snowflake.acceleration.partitions.scanned:
        __example: "50"
        __description: Number of partitions scanned by the query acceleration service.
        displayName: Query Acceleration Partitions Scanned
        unit: partitions
    snowflake.acceleration.scale_factor.max:
        __example: "4"
        __description: Upper limit scale factor that a query would have benefited from.
        displayName: Query Acceleration Upper Limit Scale Factor
        unit: factor
    snowflake.credits.cloud_services:
        __example: "10"
        __description: Number of credits used for cloud services.
        displayName: Cloud Services Credits Used
        unit: credits
    snowflake.data.deleted:
        __example: "1048576"
        __description: Number of bytes deleted by the query.
        displayName: Bytes Deleted
        unit: bytes
    snowflake.data.read.from_result:
        __example: "1048576"
        __description: Number of bytes read from a result object.
        displayName: Bytes Read from Result
        unit: bytes
    snowflake.data.scanned:
        __example: "10485760"
        __description: Number of bytes scanned by this statement.
        displayName: Bytes Scanned
        unit: bytes
    snowflake.data.scanned_from_cache:
        __example: "75"
        __description:
            The percentage of data scanned from the local disk cache. The
            value ranges from 0.0 to 1.0. Multiply by 100 to get a true percentage.
        displayName: Percentage Scanned from Cache
        unit: percent
    snowflake.data.sent_over_the_network:
        __example: "524288"
        __description: Volume of data sent over the network.
        displayName: Bytes Sent Over the Network
        unit: bytes
    snowflake.data.spilled.local:
        __example: "1048576"
        __description: Volume of data spilled to local disk.
        displayName: Bytes Spilled to Local Storage
        unit: bytes
    snowflake.data.spilled.remote:
        __example: "2097152"
        __description: Volume of data spilled to remote disk.
        displayName: Bytes Spilled to Remote Storage
        unit: bytes
    snowflake.data.transferred.inbound:
        __example: "10485760"
        __description:
            Number of bytes transferred in statements that load data from
            another region and/or cloud.
        displayName: Inbound Data Transfer Bytes
        unit: bytes
    snowflake.data.transferred.outbound:
        __example: "5242880"
        __description:
            Number of bytes transferred in statements that unload data to
            another region and/or cloud.
        displayName: Outbound Data Transfer Bytes
        unit: bytes
    snowflake.data.written:
        __example: "2097152"
        __description: Number of bytes written (e.g. when loading into a table).
        displayName: Bytes Written
        unit: bytes
    snowflake.data.written_to_result:
        __example: "1048576"
        __description: Number of bytes written to a result object.
        displayName: Bytes Written to Result
        unit: bytes
    snowflake.external_functions.data.received:
        __example: "1048576"
        __description:
            The total number of bytes that this query received from all calls
            to all remote services.
        displayName: External Function Total Received Bytes
        unit: bytes
    snowflake.external_functions.data.sent:
        __example: "524288"
        __description:
            The total number of bytes that this query sent in all calls to
            all remote services.
        displayName: External Function Total Sent Bytes
        unit: bytes
    snowflake.external_functions.invocations:
        __example: "5"
        __description:
            The aggregate number of times that this query called remote services.
            For important details, see the Usage Notes.
        displayName: External Function Total Invocations
        unit: count
    snowflake.external_functions.rows.received:
        __example: "1000"
        __description:
            The total number of rows that this query received from all calls
            to all remote services.
        displayName: External Function Total Received Rows
        unit: rows
    snowflake.external_functions.rows.sent:
        __example: "500"
        __description:
            The total number of rows that this query sent in all calls to
            all remote services.
        displayName: External Function Total Sent Rows
        unit: rows
    snowflake.load.used:
        __example: "85"
        __description:
            The approximate percentage of active compute resources in the
            warehouse for this query execution.
        displayName: Query Load Percent
        unit: percent
    snowflake.partitions.scanned:
        __example: "100"
        __description: Number of micro-partitions scanned.
        displayName: Partitions Scanned
        unit: partitions
    snowflake.partitions.total:
        __example: "500"
        __description: Total micro-partitions of all tables included in this query.
        displayName: Partitions Total
        unit: partitions
    snowflake.rows.deleted:
        __example: "500"
        __description: Number of rows deleted by the query.
        displayName: Rows Deleted
        unit: rows
    snowflake.rows.inserted:
        __example: "1000"
        __description: Number of rows inserted by the query.
        displayName: Rows Inserted
        unit: rows
    snowflake.rows.unloaded:
        __example: "1000"
        __description: Number of rows unloaded during data export.
        displayName: Rows Unloaded
        unit: rows
    snowflake.rows.updated:
        __example: "300"
        __description: Number of rows updated by the query.
        displayName: Rows Updated
        unit: rows
    snowflake.rows.written_to_result:
        __example: "1"
        __description:
            Number of rows written to a result object. For CREATE TABLE AS
            SELECT (CTAS) and all DML operations, this result is 1;.
        displayName: Rows Written to Result
        unit: rows
    snowflake.time.child_queries_wait:
        __example: "200"
        __description:
            Time (in milliseconds) to complete the cached lookup when calling
            a memoizable function.
        displayName: Child Queries Wait Time
        unit: ms
    snowflake.time.compilation:
        __example: "5000"
        __description: Compilation time (in milliseconds)
        displayName: Compilation Time
        unit: ms
    snowflake.time.execution:
        __example: "100000"
        __description: Execution time (in milliseconds)
        displayName: Execution Time
        unit: ms
    snowflake.time.fault_handling:
        __example: "1500"
        __description:
            Total execution time (in milliseconds) for query retries caused
            by errors that are not actionable.
        displayName: Fault Handling Time
        unit: ms
    snowflake.time.list_external_files:
        __example: "300"
        __description: Time (in milliseconds) spent listing external files.
        displayName: List External Files Time
        unit: ms
    snowflake.time.queued.overload:
        __example: "1500"
        __description:
            Time (in milliseconds) spent in the warehouse queue, due to the
            warehouse being overloaded by the current query workload.
        displayName: Queued Overload Time
        unit: ms
    snowflake.time.queued.provisioning:
        __example: "3000"
        __description:
            Time (in milliseconds) spent in the warehouse queue, waiting
            for the warehouse compute resources to provision, due to warehouse creation,
            resume, or resize.
        displayName: Queued Provisioning Time
        unit: ms
    snowflake.time.repair:
        __example: "500"
        __description:
            Time (in milliseconds) spent in the warehouse queue, waiting
            for compute resources in the warehouse to be repaired.
        displayName: Queued Repair Time
        unit: ms
    snowflake.time.retry:
        __example: "2000"
        __description:
            Total execution time (in milliseconds) for query retries caused
            by actionable errors.
        displayName: Query Retry Time
        unit: ms
    snowflake.time.total_elapsed:
        __example: "120000"
        __description: Elapsed time (in milliseconds).
        displayName: Total Elapsed Time
        unit: ms
    snowflake.time.transaction_blocked:
        __example: "1000"
        __description: Time (in milliseconds) spent blocked by a concurrent DML.
        displayName: Transaction Blocked Time
        unit: ms
